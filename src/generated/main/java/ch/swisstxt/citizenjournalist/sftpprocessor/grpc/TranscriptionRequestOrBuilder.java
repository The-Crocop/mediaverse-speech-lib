// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subtitling.proto

package ch.swisstxt.citizenjournalist.sftpprocessor.grpc;

public interface TranscriptionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sftpprocessor.TranscriptionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string externalReference = 1;</code>
   * @return Whether the externalReference field is set.
   */
  boolean hasExternalReference();
  /**
   * <code>optional string externalReference = 1;</code>
   * @return The externalReference.
   */
  java.lang.String getExternalReference();
  /**
   * <code>optional string externalReference = 1;</code>
   * @return The bytes for externalReference.
   */
  com.google.protobuf.ByteString
      getExternalReferenceBytes();

  /**
   * <code>string sourceUrl = 2;</code>
   * @return The sourceUrl.
   */
  java.lang.String getSourceUrl();
  /**
   * <code>string sourceUrl = 2;</code>
   * @return The bytes for sourceUrl.
   */
  com.google.protobuf.ByteString
      getSourceUrlBytes();

  /**
   * <code>repeated .sftpprocessor.SubtitleFormat format = 3;</code>
   * @return A list containing the format.
   */
  java.util.List<ch.swisstxt.citizenjournalist.sftpprocessor.grpc.SubtitleFormat> getFormatList();
  /**
   * <code>repeated .sftpprocessor.SubtitleFormat format = 3;</code>
   * @return The count of format.
   */
  int getFormatCount();
  /**
   * <code>repeated .sftpprocessor.SubtitleFormat format = 3;</code>
   * @param index The index of the element to return.
   * @return The format at the given index.
   */
  ch.swisstxt.citizenjournalist.sftpprocessor.grpc.SubtitleFormat getFormat(int index);
  /**
   * <code>repeated .sftpprocessor.SubtitleFormat format = 3;</code>
   * @return A list containing the enum numeric values on the wire for format.
   */
  java.util.List<java.lang.Integer>
  getFormatValueList();
  /**
   * <code>repeated .sftpprocessor.SubtitleFormat format = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of format at the given index.
   */
  int getFormatValue(int index);

  /**
   * <code>repeated .sftpprocessor.Language outputLanguages = 4;</code>
   * @return A list containing the outputLanguages.
   */
  java.util.List<ch.swisstxt.citizenjournalist.sftpprocessor.grpc.Language> getOutputLanguagesList();
  /**
   * <code>repeated .sftpprocessor.Language outputLanguages = 4;</code>
   * @return The count of outputLanguages.
   */
  int getOutputLanguagesCount();
  /**
   * <code>repeated .sftpprocessor.Language outputLanguages = 4;</code>
   * @param index The index of the element to return.
   * @return The outputLanguages at the given index.
   */
  ch.swisstxt.citizenjournalist.sftpprocessor.grpc.Language getOutputLanguages(int index);
  /**
   * <code>repeated .sftpprocessor.Language outputLanguages = 4;</code>
   * @return A list containing the enum numeric values on the wire for outputLanguages.
   */
  java.util.List<java.lang.Integer>
  getOutputLanguagesValueList();
  /**
   * <code>repeated .sftpprocessor.Language outputLanguages = 4;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of outputLanguages at the given index.
   */
  int getOutputLanguagesValue(int index);

  /**
   * <code>optional .sftpprocessor.RequestHeaders headers = 5;</code>
   * @return Whether the headers field is set.
   */
  boolean hasHeaders();
  /**
   * <code>optional .sftpprocessor.RequestHeaders headers = 5;</code>
   * @return The headers.
   */
  ch.swisstxt.citizenjournalist.sftpprocessor.grpc.RequestHeaders getHeaders();
  /**
   * <code>optional .sftpprocessor.RequestHeaders headers = 5;</code>
   */
  ch.swisstxt.citizenjournalist.sftpprocessor.grpc.RequestHeadersOrBuilder getHeadersOrBuilder();
}
